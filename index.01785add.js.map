{"mappings":"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","sources":["src/js/authentification.js"],"sourcesContent":["import {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  updateProfile,\n} from 'firebase/auth';\nimport { Notify } from 'notiflix';\nimport auth from '../firebase';\nimport { onClickBtnHome } from './homepage';\nimport { hideLoader, showLoader } from './loader';\nconst refs = {\n  logInBtn: document.getElementById('logIn'),\n  logInForm: document.getElementById('logInForm'),\n  signUpForm: document.getElementById('signUpForm'),\n  emailInput: document.querySelector('#email'),\n  passwordInput: document.querySelector('#password'),\n  modal: document.querySelector('.auth-modal'),\n  close: document.getElementById('auth-close'),\n  logOutBtn: document.getElementById('logOutButton'),\n  inputFile: document.getElementById('file'),\n  removeFileBtn: document.getElementById('file-remove-button'),\n  bodyEl: document.querySelector('body'),\n};\n// const libraryBtn = document.getElementById('libraryButton');\nconst passRegExp = /(?=.*?[A-Z])(?=.*?[a-z]).{6,}/;\nconst emailRegExp = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n\n// [SM]get close btn\n\n// [SM] handle click outside of modal to close it\nconst handleClickOutsideModal = e => {\n  if (e.target == refs.modal) {\n    closeAuthModal();\n  }\n};\nconst handleEscClick = e => {\n  if (e.key === 'Escape') {\n    closeAuthModal();\n  }\n};\nconst handleLogOutClicked = () => {\n  console.log('click, logOUT!!!');\n  onClickBtnHome();\n  toggleSignIn();\n};\n// [SM] handle click on close btn in modal to close modal\nconst handleCloseModal = () => {\n  closeAuthModal();\n};\nconst clearUploadedFile = () => {\n  refs.inputFile.style.background = 'unset';\n  refs.removeFileBtn.classList.toggle('hide');\n  refs.inputFile.value = null;\n};\n// [SM] handle error message\nconst setErrorMessage = errors => {\n  errors.forEach(({ el, message }) => {\n    // [SM]take closest parent for easier find error message container related to current  element\n    const formControl = el.closest('.form-control');\n    const errorContainer = formControl.querySelector('small');\n    errorContainer.innerText = message;\n    formControl.className = 'form-control error';\n  });\n};\n// [SM] clear erros to default\nconst clearErrors = () => {\n  const formControls = document.querySelectorAll('.form-control');\n  formControls.forEach(el => {\n    if (el.classList.contains('error')) {\n      el.querySelector('small').innerText = '';\n      el.classList.remove('error');\n    }\n  });\n};\nconst removeEventListeners = () => {\n  window.removeEventListener('click', handleClickOutsideModal);\n  window.removeEventListener('keyup', handleEscClick);\n  refs.close.removeEventListener('click', handleCloseModal);\n  refs.logInForm?.removeEventListener('submit', validateSignInForm);\n  refs.signUpForm?.removeEventListener('submit', validateSignUpForm);\n  refs.removeFileBtn?.removeEventListener('click', clearUploadedFile);\n};\n// [SM] fully close modal and clear listeners\nfunction closeAuthModal() {\n  clearErrorMessage();\n  refs.bodyEl.className = '';\n\n  const authFormElements = document.querySelectorAll('.auth-form');\n  // [SM] reset form\n  refs.logInForm?.reset();\n  refs.signUpForm?.reset();\n  // [SM]remove listeners\n  removeEventListeners();\n  // [SM]hide what should be hidden\n  authFormElements.forEach(el => {\n    if (el.classList.contains('hide')) {\n      return;\n    }\n    el.classList.add('hide');\n  });\n}\nlet errorMessageTimeOut;\n// [SM]Check sign up validation\nconst validateSignUpForm = e => {\n  e.preventDefault();\n  const {\n    elements: { email, password, username, confirmPassword, file },\n  } = e.currentTarget;\n\n  const emailValue = email.value.trim();\n  const nameValue = username.value.trim();\n  const passValue = password.value.trim();\n  const cPasswordValue = confirmPassword.value.trim();\n  const isEmailValid = emailRegExp.test(emailValue);\n\n  let errors = [];\n  if (!nameValue) {\n    errors.push({ el: username, message: 'name cannot be empty' });\n  } else if (nameValue.length < 3 || nameValue.lenght > 15) {\n    errors.push({\n      el: username,\n      message: 'name should be at least 3 symbols and not more than 15 symbols',\n    });\n  }\n  if (!emailValue) {\n    errors.push({ el: email, message: 'email cannot be empty' });\n  } else if (!isEmailValid) {\n    errors.push({ el: email, message: 'fill correct email' });\n  }\n  const isPassValid = passRegExp.test(passValue);\n\n  if (!passValue) {\n    errors.push({ el: password, message: 'password cannot be empty' });\n  } else if (!isPassValid) {\n    errors.push({\n      el: password,\n      message:\n        'should contain at least one lower and one upper case and be 6 or more',\n    });\n  } else if (passValue !== cPasswordValue) {\n    errors.push({\n      el: password,\n      message: 'Your password and confirmation password do not match',\n    });\n    errors.push({\n      el: confirmPassword,\n      message: 'Your password and confirmation password do not match',\n    });\n  }\n  setErrorMessage(errors);\n  if (errors.length) {\n    errorMessageTimeOut = setTimeout(() => {\n      clearErrors();\n    }, 5000);\n  } else {\n    showLoader();\n    createUser({ email: emailValue, password: passValue, name: nameValue });\n  }\n};\n// [SM]check Loggin for valid\nconst validateSignInForm = e => {\n  e.preventDefault();\n  const {\n    elements: { email, password },\n  } = e.currentTarget;\n  const emailValue = email.value.trim();\n  const passValue = password.value.trim();\n  let errors = false;\n  if (!emailValue) {\n    setErrorMessage(email, 'email cannot be empty');\n  }\n  if (!passValue) {\n    setErrorMessage(password, 'password cannot be empty');\n  }\n  if (passValue.length < 6) {\n    setErrorMessage(password, 'password cannot less than 6 symbols');\n  }\n  return errors\n    ? (errorMessageTimeOut = setTimeout(() => {\n        clearErrors();\n      }, 5000))\n    : toggleSignIn(emailValue, passValue);\n};\n// [SM] clear timeOut\nfunction clearErrorMessage() {\n  clearTimeout(errorMessageTimeOut);\n}\n// [SM] create user\nasync function createUser({ email, password, name }) {\n  await createUserWithEmailAndPassword(auth, email, password)\n    .then(async userCredential => {\n      const user = userCredential.user;\n      if (user) {\n        await updateProfile(user, { displayName: name })\n          .then(() => {})\n          .catch(err => {\n            Notify.warning(\"Name wasn't saved\");\n          });\n      }\n      var displayName = user.displayName;\n      const userContainer = document.querySelector('#userContainer');\n      if (userContainer) {\n        userContainer.innerText = displayName;\n      }\n    })\n    .catch(error => {\n      hideLoader();\n\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      Notify.failure(errorMessage);\n    });\n}\n// [SM] check sign in or should logout\nfunction toggleSignIn(email, password) {\n  console.log('come to toggle: ');\n  if (auth.currentUser) {\n    togglePrivateRoutes();\n\n    auth.signOut();\n  } else {\n    showLoader();\n    // [SM] Sign in with email and pass.\n    signInWithEmailAndPassword(auth, email, password)\n      .then(() => {\n        hideLoader();\n      })\n      .catch(function (error) {\n        // [SM] Handle Errors here.\n        var errorCode = error.code;\n\n        var errorMessage = error.message;\n        if (errorCode === 'auth/wrong-password') {\n          Notify.failure('Wrong email or password!');\n        } else if (errorCode === 'auth/user-not-found') {\n          Notify.failure(\"User doesn't exist\");\n        } else {\n          Notify.failure(errorMessage);\n        }\n        hideLoader();\n      });\n  }\n}\nauth.onAuthStateChanged(function (user) {\n  if (user) {\n    togglePrivateRoutes();\n    refs.logOutBtn.addEventListener('click', handleLogOutClicked);\n\n    // [SM] User is signed in.\n    let displayName = user.displayName;\n    if (displayName) {\n      const userContainer = document.querySelector('#userContainer');\n      if (userContainer) {\n        userContainer.innerText = displayName;\n      }\n    }\n\n    var uid = user.uid;\n    var providerData = user.providerData;\n    hideLoader();\n    closeAuthModal();\n  } else {\n    refs.logOutBtn?.removeEventListener('click', handleLogOutClicked);\n\n    hideLoader();\n  }\n});\n\n// [SM] Hide what user should not see if not logged\nfunction togglePrivateRoutes() {\n  const privateRoutes = document.querySelectorAll('.private-route');\n  privateRoutes.forEach(routeElement => routeElement.classList.toggle('hide'));\n}\n// [SM]\nfunction handleAddAvatar() {\n  const { value } = refs.inputFile;\n  if (value) {\n    console.log('  refs.removeFileBtn: ', refs.removeFileBtn);\n    const url = window.URL.createObjectURL(refs.inputFile.files[0]);\n    refs.inputFile.style.background = `url(${url}) no-repeat 100px center / 30px calc(100% - 4px)`;\n    refs.removeFileBtn.classList.toggle('hide');\n\n    refs.removeFileBtn.addEventListener('click', clearUploadedFile);\n  } else {\n    refs.removeFileBtn.classList.toggle('hide');\n    refs.inputFile.style.background = 'unset';\n    refs.removeFileBtn.removeEventListener('click', clearUploadedFile);\n  }\n}\n\n// [SM] open login form\nfunction showLogInForm() {\n  refs.modal.classList.toggle('hide');\n  refs.logInForm.classList.remove('hide');\n  // [SM] handle click outside of modal to close it\n  window.addEventListener('click', handleClickOutsideModal);\n  // [SM] handle click escape  to close   modal\n  window.addEventListener('keyup', handleEscClick);\n  refs.close.addEventListener('click', handleCloseModal);\n  // [SM] logInForm.classList.toggle('hide');\n  refs.emailInput.focus();\n  refs.logInForm.addEventListener('submit', validateSignInForm);\n}\n// [SM] open sign in form\nfunction showSignInForm() {\n  refs.modal.classList.toggle('hide');\n  const parentWrapper = refs.signUpForm.closest('.auth-form');\n  parentWrapper.classList.remove('hide');\n  refs.inputFile.addEventListener('change', handleAddAvatar);\n\n  // [SM] handle click outside of modal to close it\n  window.addEventListener('click', handleClickOutsideModal);\n  // [SM] handle click escape  to close   modal\n  window.addEventListener('keyup', handleEscClick);\n  refs.close.addEventListener('click', handleCloseModal);\n\n  refs.signUpForm.addEventListener('submit', validateSignUpForm);\n}\n// [SM] Access auth elements\nconst authAction = document.querySelectorAll('.auth__button');\n\n// [SM] check attribute what action\nauthAction.forEach(item => {\n  item.addEventListener('click', e => {\n    let chosen = e.target.getAttribute('auth');\n\n    if (chosen === 'show-log-in-form') {\n      if (auth.currentUser) {\n        // [SM] if user logged in, then it was clicke to logout so lets do logout\n        togglePrivateRoutes();\n\n        return auth.signOut();\n      }\n      refs.bodyEl.classList.add('overflow-hidden');\n      showLogInForm();\n    } else {\n      refs.bodyEl.classList.add('overflow-hidden');\n      showSignInForm();\n    }\n  });\n});\n"],"names":["$02576516edda4b71$var$errorMessageTimeOut","$bpxeT","parcelRequire","$02576516edda4b71$var$refs","logInBtn","document","getElementById","logInForm","signUpForm","emailInput","querySelector","passwordInput","modal","close","logOutBtn","inputFile","removeFileBtn","bodyEl","$02576516edda4b71$var$passRegExp","$02576516edda4b71$var$emailRegExp","$02576516edda4b71$var$handleClickOutsideModal","e","target","$02576516edda4b71$var$closeAuthModal","$02576516edda4b71$var$handleEscClick","key","$02576516edda4b71$var$handleLogOutClicked","console","log","$dZPjZ","onClickBtnHome","$02576516edda4b71$var$toggleSignIn","$02576516edda4b71$var$handleCloseModal","$02576516edda4b71$var$clearUploadedFile","style","background","classList","toggle","value","$02576516edda4b71$var$setErrorMessage","errors","forEach","param","el","message","formControl","closest","innerText","className","$02576516edda4b71$var$clearErrors","querySelectorAll","contains","remove","ref","ref3","clearTimeout","authFormElements","reset","ref1","ref2","window","removeEventListener","$02576516edda4b71$var$validateSignInForm","$02576516edda4b71$var$validateSignUpForm","$02576516edda4b71$var$removeEventListeners","add","preventDefault","_elements","currentTarget","elements","email","password","username","confirmPassword","emailValue","file","trim","nameValue","passValue","cPasswordValue","isEmailValid","test","length","lenght","push","isPassValid","setTimeout","$kvC6y","showLoader","_","$02576516edda4b71$var$_createUser","apply","this","arguments","$02576516edda4b71$var$createUser","name","$parcel$interopDefault","$2TvXO","mark","_callee1","$3SEMc","createUserWithEmailAndPassword","$hVYKj","default","then","_callee","userCredential","user","displayName","userContainer","updateProfile","catch","err","$iU1Pc","Notify","warning","error","hideLoader","code","errorMessage","failure","currentUser","$02576516edda4b71$var$togglePrivateRoutes","signOut","signInWithEmailAndPassword","errorCode","routeElement","$02576516edda4b71$var$handleAddAvatar","url","URL","createObjectURL","files","concat","addEventListener","onAuthStateChanged","uid","providerData","item","getAttribute","focus"],"version":3,"file":"index.01785add.js.map"}